[{"E:\\Projects\\meddo-assn\\src\\index.js":"1","E:\\Projects\\meddo-assn\\src\\reportWebVitals.js":"2","E:\\Projects\\meddo-assn\\src\\App.js":"3","E:\\Projects\\meddo-assn\\src\\components\\Login\\Login.jsx":"4","E:\\Projects\\meddo-assn\\src\\components\\Register\\Register.jsx":"5","E:\\Projects\\meddo-assn\\src\\components\\Navbar\\Navbar.jsx":"6","E:\\Projects\\meddo-assn\\src\\components\\Profile\\Profile.jsx":"7","E:\\Projects\\meddo-assn\\src\\components\\Home\\Home.js":"8","E:\\Projects\\meddo-assn\\src\\services\\AuthService.js":"9","E:\\Projects\\meddo-assn\\src\\hocs\\ProtectedRoute.js":"10","E:\\Projects\\meddo-assn\\src\\hocs\\UnProtectedRoute.js":"11","E:\\Projects\\meddo-assn\\src\\context\\AuthContext.js":"12"},{"size":383,"mtime":1610272197190,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":932,"mtime":1610267407167,"results":"16","hashOfConfig":"14"},{"size":3873,"mtime":1610370399461,"results":"17","hashOfConfig":"14"},{"size":3479,"mtime":1610262982793,"results":"18","hashOfConfig":"14"},{"size":1685,"mtime":1610277606509,"results":"19","hashOfConfig":"14"},{"size":2205,"mtime":1610339102725,"results":"20","hashOfConfig":"14"},{"size":580,"mtime":1610274633259,"results":"21","hashOfConfig":"14"},{"size":4281,"mtime":1610371003446,"results":"22","hashOfConfig":"14"},{"size":664,"mtime":1610339152005,"results":"23","hashOfConfig":"14"},{"size":605,"mtime":1610272027619,"results":"24","hashOfConfig":"14"},{"size":1013,"mtime":1610358478506,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"lhjfro",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"E:\\Projects\\meddo-assn\\src\\index.js",[],["53","54"],"E:\\Projects\\meddo-assn\\src\\reportWebVitals.js",[],"E:\\Projects\\meddo-assn\\src\\App.js",[],"E:\\Projects\\meddo-assn\\src\\components\\Login\\Login.jsx",["55","56","57"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\nimport { useMockContext } from \"../../context/AuthContext\";\r\n\r\nconst Login = (props) => {\r\n  const [user, setNewUser] = useState({ username: \"\", password: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [displayMsg, setDisplayMsg] = useState(null);\r\n  const [alertClass, setAlertClass] = useState(\"primary\");\r\n  // const { setIsAuthenticated, setUser } = useContext(AuthContext);\r\n  const { setIsAuthenticated, setUser } = useMockContext();\r\n\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   resetForm();\r\n  // }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    let { message } = await AuthService.login(user.username, user.password);\r\n    if (message.msgError) {\r\n      setAlertClass(\"danger\");\r\n      setDisplayMsg(message.message);\r\n      setTimeout(() => {\r\n        resetForm();\r\n        setIsLoading(false);\r\n        setDisplayMsg(null);\r\n      }, 3000);\r\n      setIsLoading(false);\r\n      resetForm();\r\n    } else {\r\n      setIsAuthenticated(true);\r\n      setAlertClass(\"success\");\r\n      setUser(await AuthService.getUserProfile());\r\n      setDisplayMsg(message.message);\r\n      setTimeout(() => {\r\n        resetForm();\r\n        setIsLoading(false);\r\n        setDisplayMsg(null);\r\n        // history.push(\"/user\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNewUser({ username: \"\", password: \"\" });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col xs={6}>\r\n          <h3 className=\"text-center mt-3 display-4\">Login</h3>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                data-testid=\"emailInput\"\r\n                type=\"email\"\r\n                name=\"username\"\r\n                id=\"emailInput\"\r\n                value={user.username}\r\n                placeholder=\"Enter your Email...\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={user.password}\r\n                placeholder=\"Enter Password...\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"text-center\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading && (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}{\" \"}\r\n              <span>Login</span>\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col>\r\n          {\" \"}\r\n          {displayMsg && (\r\n            <Alert className=\"mt-3\" variant={alertClass}>\r\n              {displayMsg}\r\n            </Alert>\r\n          )}\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\Projects\\meddo-assn\\src\\components\\Register\\Register.jsx",[],"E:\\Projects\\meddo-assn\\src\\components\\Navbar\\Navbar.jsx",[],"E:\\Projects\\meddo-assn\\src\\components\\Profile\\Profile.jsx",["58"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nconst Profile = () => {\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const [fetchIing, setisFetching] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setisFetching(false);\r\n    }, 1000);\r\n  });\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col xs={6}>\r\n          <h3 className=\"text-center mt-3 display-4\">Profile</h3>\r\n          {!fetchIing ? (\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Name: {user.nickname}</Card.Title>\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">\r\n                <ListGroupItem>\r\n                  <strong>Email:</strong> {user.email}\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <strong>Updated_at:</strong> {user.updated_at}\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <strong>Email_verified:</strong> {user.email_verified}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n              <Card.Img variant=\"left\" src={user.picture} />\r\n              <Card.Body>\r\n                <Button variant=\"primary\">\r\n                  <strong>Go somewhere</strong>\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginBlock: \"10%\",\r\n              }}\r\n            >\r\n              <Spinner\r\n                style={{\r\n                  fontSize: \"0.4rem\",\r\n                  height: \"5rem\",\r\n                  width: \"5rem\",\r\n                }}\r\n                animation=\"border\"\r\n                variant=\"primary\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\Projects\\meddo-assn\\src\\components\\Home\\Home.js",[],"E:\\Projects\\meddo-assn\\src\\services\\AuthService.js",["59"],"E:\\Projects\\meddo-assn\\src\\hocs\\ProtectedRoute.js",[],"E:\\Projects\\meddo-assn\\src\\hocs\\UnProtectedRoute.js",[],"E:\\Projects\\meddo-assn\\src\\context\\AuthContext.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":1,"column":38,"nodeType":"66","messageId":"67","endLine":1,"endColumn":48},{"ruleId":"64","severity":1,"message":"69","line":25,"column":9,"nodeType":"66","messageId":"67","endLine":25,"endColumn":16},{"ruleId":"64","severity":1,"message":"70","line":16,"column":17,"nodeType":"66","messageId":"67","endLine":16,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":7,"column":1,"nodeType":"73","endLine":161,"endColumn":3},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'history' is assigned a value but never used.","'setUser' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]